---
- name: Setup Docker Swarm Worker
  hosts: workers
  become: yes
  vars:
    # These should be provided when running the playbook:
    # ansible-playbook worker.yml -e "manager_ip=1.2.3.4 worker_token=SWMTKN-..."
    manager_ip: "{{ manager_ip | default('') }}"
    worker_token: "{{ worker_token | default('') }}"

  tasks:
    - name: Fail if manager_ip or worker_token not provided
      fail:
        msg: "Please provide manager_ip and worker_token: ansible-playbook worker.yml -e 'manager_ip=X.X.X.X worker_token=SWMTKN-...'"
      when: manager_ip == "" or worker_token == ""

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Start and enable Docker
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Check if already in swarm
      shell: docker info --format '{{ "{{" }}.Swarm.LocalNodeState{{ "}}" }}'
      register: swarm_status
      changed_when: false

    - name: Join Docker Swarm
      shell: docker swarm join --token {{ worker_token }} {{ manager_ip }}:2377
      when: swarm_status.stdout != "active"
      register: join_result

    - name: Verify swarm membership
      shell: docker info --format '{{ "{{" }}.Swarm.LocalNodeState{{ "}}" }}'
      register: final_status
      changed_when: false

    - name: Show worker status
      debug:
        msg: |
          ‚úÖ Worker setup complete!
          
          üìç Node: {{ ansible_hostname }}
          üîó Swarm Status: {{ final_status.stdout }}
          üéØ Manager: {{ manager_ip }}
          
          {% if join_result is defined and join_result.changed %}
          ‚ú® Successfully joined swarm!
          {% else %}
          ‚ÑπÔ∏è  Already part of swarm
          {% endif %}