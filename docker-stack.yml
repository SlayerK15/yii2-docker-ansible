services:
  app:
    image: slayerop15/yii2-docker-ansible:latest
    networks:
      - yii2-network
    environment:
      - DB_HOST=db
      - DB_NAME=yii2db
      - DB_USER=yii2user
      - DB_PASSWORD=yii2password
      - YII_ENV=prod
      - YII_DEBUG=false
    deploy:
      replicas: 3  # Exactly 3 containers: 1 per node
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      placement:
        max_replicas_per_node: 1  
        preferences:
          - spread: node.hostname  
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    ports:
      - target: 9000
        published: 9000
        protocol: tcp
        mode: ingress
    

  db:
    image: mysql:8.0
    networks:
      - yii2-network
    environment:
      MYSQL_DATABASE: yii2db
      MYSQL_USER: yii2user
      MYSQL_PASSWORD: yii2password
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
      MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
    volumes:
      - db-data:/var/lib/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 5
      placement:
        constraints:
          - node.role == manager  
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=100

networks:
  yii2-network:
    driver: overlay
    attachable: true

volumes:
  db-data:
    driver: local