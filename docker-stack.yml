services:
  app:
    image: slayerop15/yii2-docker-ansible:latest
    networks:
      - yii2-network
    environment:
      # Database configuration
      - DB_HOST=db
      - DB_NAME=yii2db
      - DB_USER=yii2user
      - DB_PASSWORD=yii2password
      
      # CRITICAL: Production environment variables to prevent debug module errors
      - YII_ENV=prod
      - YII_DEBUG=false
      
      # Optional: Additional production settings
      - PHP_MEMORY_LIMIT=512M
      - PHP_MAX_EXECUTION_TIME=60
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 10s
        monitor: 60s
        order: stop-first
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    ports:
      - target: 9000
        published: 9000
        protocol: tcp
        mode: ingress
    healthcheck:
      test: ["CMD-SHELL", "pidof php-fpm || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - db

  db:
    image: mysql:8.0
    networks:
      - yii2-network
    environment:
      MYSQL_DATABASE: yii2db
      MYSQL_USER: yii2user
      MYSQL_PASSWORD: yii2password
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - db-data:/var/lib/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: ingress
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

networks:
  yii2-network:
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 10.0.1.0/24

volumes:
  db-data:
    driver: local